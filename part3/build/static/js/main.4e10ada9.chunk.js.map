{"version":3,"sources":["components/Form.js","components/Filter.js","components/Display.js","components/Notification.js","services/contactService.js","App.js","index.js"],"names":["Form","props","onSubmit","addContact","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","filter","handleFilterChange","Display","persons","person","name","toLowerCase","includes","map","number","onClick","deleteContact","exports","Message","message","className","ErrorMessage","baseurl","getContacts","axios","get","createContact","newContact","post","id","delete","editContact","updatedContact","put","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","errorMessage","setErrorMessage","useEffect","contactService","then","response","data","handleMessage","setTimeout","handleError","Notification","event","target","preventDefault","existingContact","find","window","confirm","catch","error","newPerson","concat","contact","ReactDOM","render","document","getElementById"],"mappings":"oLAkBeA,EAhBF,SAACC,GACV,OACI,uBAAMC,SAAUD,EAAME,WAAtB,UACI,yCACU,uBAAOC,MAAOH,EAAMI,QAASC,SAAUL,EAAMM,sBAEvD,2CACY,uBAAOH,MAAOH,EAAMO,UAAWF,SAAUL,EAAMQ,wBAE3D,8BACI,wBAAQC,KAAK,SAAb,uBCHDC,EATA,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,mBACrB,OACI,sDACuB,uBAAOT,MAAOQ,EAAQN,SAAUO,QCShDC,EAZC,SAACb,GAGb,OACIA,EAAMc,QACDH,QAAO,SAACI,GAAD,OAAYA,EAAOC,KAAKC,cAAcC,SAASlB,EAAMW,WAC5DQ,KAAI,SAACJ,GAAD,OAAY,gCAAwBA,EAAOC,KAA/B,IAAsCD,EAAOK,OAC9D,wBAAQC,QAAS,kBAAMrB,EAAMsB,cAAcP,IAA3C,sBAD2BA,EAAOC,UCkB/BO,EADC,CAACC,QAvBD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OAAgB,OAAZA,EACK,KAIP,qBAAKC,UAAU,UAAf,SACGD,KAgBkBE,aAXN,SAAC,GAAiB,IAAfF,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACK,KAIP,qBAAKC,UAAU,QAAf,SACGD,M,gBClBHG,EAAU,eAkBDL,EADC,CAACM,YAfG,WAChB,OAAOC,IAAMC,IAAIH,IAcSI,cAXR,SAAAC,GAClB,OAAOH,IAAMI,KAAKN,EAASK,IAUcX,cAPvB,SAAAa,GAClB,OAAOL,IAAMM,OAAN,UAAgBR,EAAhB,YAA2BO,KAMsBE,YAHxC,SAACC,GACjB,OAAOR,IAAMS,IAAN,UAAaX,EAAb,YAAwBU,EAAeH,IAAMG,KCmFzCE,EA7FH,WACV,MAA8BC,mBAAS,IAAvC,mBAAO3B,EAAP,KAAgB4B,EAAhB,KACA,EAAgCD,mBAAS,IAAzC,mBAAQrC,EAAR,KAAiBuC,EAAjB,KACA,EAAoCF,mBAAS,IAA7C,mBAAQlC,EAAR,KAAmBqC,EAAnB,KACA,EAA6BH,mBAAS,IAAtC,mBAAQ9B,EAAR,KAAgBkC,EAAhB,KACA,EAA8BJ,mBAAS,MAAvC,mBAAOhB,EAAP,KAAgBqB,EAAhB,KACA,EAAwCL,mBAAS,MAAjD,mBAAOM,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,EAAerB,cACdsB,MAAK,SAAAC,GAAQ,OAAIV,EAAWU,EAASC,WACtC,IAEF,IAAMC,EAAgB,SAAC7B,GACrBqB,EAAWrB,GACX8B,YAAW,WACTT,EAAW,QACV,MAECU,EAAc,SAAC/B,GACnBuB,EAAgBvB,GAChB8B,YAAW,WACTP,EAAgB,QACf,MAqDL,OACE,gCACE,cAACS,EAAajC,QAAd,CAAsBC,QAASA,IAC/B,cAACgC,EAAa9B,aAAd,CAA2BF,QAASsB,IACpC,2CACA,cAAC,EAAD,CAAQpC,OAAQA,EAAQC,mBATD,SAAC8C,GAC1Bb,EAAUa,EAAMC,OAAOxD,UAUrB,mDACA,cAAC,EAAD,CAAMG,iBAlBe,SAACoD,GACxBf,EAAWe,EAAMC,OAAOxD,QAiBoBK,mBAfnB,SAACkD,GAC1Bd,EAAac,EAAMC,OAAOxD,QAexBC,QAASA,EAASG,UAAWA,EAAWL,WA3DzB,SAACwD,GAClBA,EAAME,iBACN,IAAMC,EAAkB/C,EAAQgD,MAAK,SAAC/C,GAAD,OAAYA,EAAOC,OAASZ,KACjE,GAAIyD,GACF,GAAGE,OAAOC,QAAP,UAAkB5D,EAAlB,0EAAkG,CACnG,IAAMkC,EAAc,2BAAOuB,GAAP,IAAwBzC,OAAQb,IACpD2C,EAAeb,YAAYC,GAC1Ba,MAAK,SAAAC,GACJV,EAAW5B,EAAQK,KAAI,SAAAJ,GAAM,OAAIA,EAAOoB,KAAO0B,EAAgB1B,GAAKpB,EAASqC,EAASC,SACtFC,EAAc,GAAD,OAAIO,EAAgB7C,KAApB,2CACZiD,OAAM,SAAAC,GACPV,EAAYU,EAAMd,SAASC,KAAKa,eAMjC,CACH,IAAMC,EAAY,CAACnD,KAAMZ,EAASgB,OAAQb,GAC1C2C,EAAelB,cAAcmC,GAC5BhB,MAAK,SAAAC,GACJV,EAAW5B,EAAQsD,OAAOhB,EAASC,OACnCC,EAAc,SAAD,OAAUlD,OAExB6D,OAAM,SAAAC,GACLV,EAAYU,EAAMd,SAASC,KAAKa,UAKpCvB,EAAW,IACXC,EAAa,OA8BX,yCACA,cAAC,EAAD,CAAS9B,QAASA,EAASH,OAAQA,EAAQW,cA7BzB,SAAC+C,GACjBN,OAAOC,QAAP,iBAAyBK,EAAQrD,KAAjC,QACFkC,EAAe5B,cAAc+C,EAAQlC,IACrCO,EAAW5B,EAAQH,QAAO,SAAAI,GAAM,OAAIA,EAAOoB,KAAOkC,EAAQlC,e,MChEhEmC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4e10ada9.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Form = (props) => {\r\n    return(\r\n        <form onSubmit={props.addContact}>\r\n            <div>\r\n                name: <input value={props.newName} onChange={props.handleNameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form","const Filter = ({filter, handleFilterChange}) => {\r\n    return(\r\n        <div>\r\n            Filter shown with: <input value={filter} onChange={handleFilterChange}></input>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Filter","const Display = (props) => {\r\n    \r\n\r\n    return(\r\n        props.persons\r\n            .filter((person) => person.name.toLowerCase().includes(props.filter))\r\n            .map((person) => <div key={person.name}>{person.name} {person.number}\r\n            <button onClick={() => props.deleteContact(person)}>delete</button></div>)\r\n        \r\n    )\r\n}\r\n\r\nexport default Display","const Message = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"message\">\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\nconst ErrorMessage = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\nconst exports = {Message,  ErrorMessage}\r\nexport default exports","import axios from \"axios\"\r\nconst baseurl = \"/api/persons\"\r\n\r\nconst getContacts = () => {\r\n    return axios.get(baseurl)\r\n}\r\n\r\nconst createContact = newContact => {\r\n    return axios.post(baseurl, newContact)\r\n}\r\n\r\nconst deleteContact = id => {\r\n    return axios.delete(`${baseurl}/${id}`)\r\n}\r\n\r\nconst editContact = (updatedContact) => {\r\n    return axios.put(`${baseurl}/${updatedContact.id}`, updatedContact)\r\n}\r\nconst exports = {getContacts, createContact, deleteContact, editContact}\r\nexport default exports","import React, { useState, useEffect } from 'react'\nimport Form from \"./components/Form\"\nimport Filter from \"./components/Filter\"\nimport Display from \"./components/Display\"\nimport Notification from \"./components/Notification\"\nimport contactService from \"./services/contactService\"\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    contactService.getContacts()\n    .then(response => setPersons(response.data))\n  },[])\n\n  const handleMessage = (message) => {\n    setMessage(message)\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n  const handleError = (message) => {\n    setErrorMessage(message)\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 10000)\n  }\n\n  const addContact = (event) => {\n    event.preventDefault()\n    const existingContact = persons.find((person) => person.name === newName)\n    if (existingContact) {\n      if(window.confirm(`${newName} is already added to phonebook Replace the old number with a new one?`)){\n        const updatedContact = {...existingContact, number: newNumber}\n        contactService.editContact(updatedContact)\n        .then(response => {\n          setPersons(persons.map(person => person.id !== existingContact.id ? person : response.data))\n          handleMessage(`${existingContact.name}'s number was changed successfully.`)\n        }).catch(error => {\n          handleError(error.response.data.error)\n        })\n        \n        \n      }\n    } \n    else {\n      const newPerson = {name: newName, number: newNumber}\n      contactService.createContact(newPerson)\n      .then(response => {\n        setPersons(persons.concat(response.data))\n        handleMessage(`Added ${newName}`)\n      })\n      .catch(error => {\n        handleError(error.response.data.error)\n      })\n      \n    }\n\n    setNewName(\"\")\n    setNewNumber(\"\")\n  }\n  const deleteContact = (contact) => {\n    if (window.confirm(`Delete ${contact.name}?`)) {\n      contactService.deleteContact(contact.id)\n      setPersons(persons.filter(person => person.id !== contact.id))\n    }\n\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <Notification.Message message={message}/>\n      <Notification.ErrorMessage message={errorMessage}/>\n      <h2>Phonebook</h2>\n      <Filter filter={filter} handleFilterChange={handleFilterChange}/>\n      \n      <h2>Add a new contact</h2>\n      <Form handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}\n      newName={newName} newNumber={newNumber} addContact={addContact}/>\n      \n      <h2>Numbers</h2>\n      <Display persons={persons} filter={filter} deleteContact={deleteContact}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}